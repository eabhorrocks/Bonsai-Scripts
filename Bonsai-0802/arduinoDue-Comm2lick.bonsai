<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.4.0-preview">
  <Workflow xmlns:q1="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:q2="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input" xmlns:q3="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns="https://bonsai-rx.org/2018/workflow">
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:SerialStringRead">
          <q1:PortName>COM5</q1:PortName>
          <q1:NewLine>\n</q1:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:SerialStringWrite">
          <q1:PortName>COM5</q1:PortName>
          <q1:NewLine>\r</q1:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>c0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Parse">
        <Pattern>%i\t%i\t%i\t%i</Pattern>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item2</Selector>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item3</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="DistinctUntilChanged" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="DistinctUntilChanged" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="IntProperty">
          <Value>0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="BehaviorSubject">
        <Name>leftLicks</Name>
      </Expression>
      <Expression xsi:type="BehaviorSubject">
        <Name>rightLicks</Name>
      </Expression>
      <Expression xsi:type="MulticastSubject">
        <Name>leftLicks</Name>
      </Expression>
      <Expression xsi:type="MulticastSubject">
        <Name>rightLicks</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:KeyDown">
          <q2:Filter>A</q2:Filter>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:KeyDown">
          <q2:Filter>B</q2:Filter>
        </Combinator>
      </Expression>
      <Expression xsi:type="BehaviorSubject">
        <Name>serialToSend</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>l5000</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>r5000</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Merge" />
      </Expression>
      <Expression xsi:type="MulticastSubject">
        <Name>serialToSend</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>serialToSend</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>leftLicks</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>rightLicks</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:KeyDown">
          <q2:Filter>C</q2:Filter>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>c1</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty">
          <Value>c0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="IntProperty">
          <Value>0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Skip">
          <Count>1</Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Skip">
          <Count>1</Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:KeyDown">
          <q2:Filter>D</q2:Filter>
        </Combinator>
      </Expression>
      <Expression xsi:type="Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="q3:PythonTransform">
              <q3:Script>@returns(bool)
def process(value):
  mylist = value.split("\t")

  if len(mylist) == 4:
    return True
  else:
    return False

</q3:Script>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="0" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="30" Label="Source1" />
      <Edge From="2" To="15" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="3" To="5" Label="Source1" />
      <Edge From="4" To="6" Label="Source1" />
      <Edge From="5" To="7" Label="Source1" />
      <Edge From="6" To="11" Label="Source1" />
      <Edge From="7" To="12" Label="Source1" />
      <Edge From="8" To="27" Label="Source1" />
      <Edge From="13" To="17" Label="Source1" />
      <Edge From="14" To="16" Label="Source1" />
      <Edge From="16" To="18" Label="Source2" />
      <Edge From="17" To="18" Label="Source1" />
      <Edge From="18" To="19" Label="Source1" />
      <Edge From="20" To="1" Label="Source1" />
      <Edge From="23" To="24" Label="Source1" />
      <Edge From="24" To="18" Label="Source3" />
      <Edge From="25" To="18" Label="Source4" />
      <Edge From="26" To="28" Label="Source1" />
      <Edge From="27" To="9" Label="Source1" />
      <Edge From="28" To="10" Label="Source1" />
      <Edge From="29" To="25" Label="Source1" />
      <Edge From="30" To="3" Label="Source1" />
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.IO.SerialStringRead, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.SerialStringWrite, Bonsai.System, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.StringProperty, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ParseBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.DistinctUntilChanged, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.IntProperty, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.MulticastSubjectBuilder, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Windows.Input.KeyDown, Bonsai.Windows.Input, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Merge, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Skip, Bonsai.Core, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.4.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>